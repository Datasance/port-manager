trigger:
    tags:
      include:
      - v*
    branches:
      include:
      - develop
      - release*
    paths:
      exclude:
      - README.md
      - CHANGELOG.md
      - LICENSE

variables:
  GOROOT: '/usr/local/go1.17.9'
  GOPATH: '/tmp/go'
  GOBIN:  '$(GOPATH)/bin'
  repository: 'focal-freedom-236620/port-manager'
  build: $(Build.BuildId)
  ref: $(Build.SourceBranch)
  branch: $(Build.SourceBranchName)
  version:

jobs:
- job: Port_Manager
  pool:
    vmImage: 'Ubuntu-20.04'

  steps:
  - script: |
      set -e
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'

  - task: GoTool@0
    inputs:
      version: '1.17.9'
      goPath: $(GOPATH)
      goBin: $(GOBIN)
    displayName: 'Install Golang'

  - bash: |
      VERS=$(echo $(commit) | cut -c1-20)
      if [[ $(ref) == refs/tags* ]]; then
        VERS=$(echo $(ref) | sed "s|refs/tags/v||g")
      fi
      echo "##vso[task.setvariable variable=version]$VERS"
    displayName: 'Set version variable'

  - script: |
      set -e
      make golangci-lint
      golangci-lint version
    displayName: 'Bootstrap'

  - script: |
      set -e
      make lint
    displayName: 'Lint'

  - script: |
      set -e
      make build
    displayName: 'Build'

  - task: Docker@2
    displayName: 'build docker'
    inputs:
      containerRegistry: 'Edgeworx GCP'
      repository: $(repository)
      command: 'buildAndPush'
      Dockerfile: './Dockerfile'
      buildContext: './'
      tags: |
        $(version)
        $(branch)
        $(branch)-$(build)
        latest

  - script: |
      set -e
      echo $(version) > $(Build.ArtifactStagingDirectory)/version.txt
    displayName: 'Create version artefact'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'port-manager'
    displayName: 'Publish artefacts'
