name: CI
on:
  push: 
    branches:
      - develop
      - release*
    tags: [v*]
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
  pull_request:
  # Sequence of patterns matched against refs/heads
    branches:    
      - develop
      - release*
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
env:
  PROJECT: 'focal-freedom-236620'
  IMAGE_NAME: 'port-manager'
  GKE_CLUSTER: 'iofogctl-ci'
  GKE_ZONE: 'us-central1-a'

jobs:
  Port_Manager:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    name: Port_Manager
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version: '1.18'
    - run: go version
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.50.1
        args: --timeout=5m0s
    - run: make build

    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 0.0.0
    - name: Set image tag
      shell: bash
      id: tags
      run: |
        if [[ ${{ github.ref_name }} =~ ^v.* ]] ; then
          VERSION=${{ github.ref_name }}
          echo "VERSION=${VERSION:1}" >> "${GITHUB_OUTPUT}"
        else
           VERSION=${{ steps.previoustag.outputs.tag }}
           echo "VERSION=${VERSION:1}-${{ github.run_number }}" >> "${GITHUB_OUTPUT}"
        fi

    - name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: "ghcr.io"
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build and Push to ghcr
      uses: docker/build-push-action@v3
      id: build_push_ghcr
      with:
        file: './Dockerfile'
        push: true
        tags: |
          ghcr.io/eclipse-iofog/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.VERSION }}
          ghcr.io/eclipse-iofog/${{ env.IMAGE_NAME }}:latest
        context: './'
        
    - name: Build and Push to GCR
      if: ${{ steps.tags.outcome }} == 'success'
      id: build_push_gcr
      uses: RafikFarhad/push-to-gcr-github-action@v5-beta
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        registry: gcr.io
        project_id: ${{ env.PROJECT }}
        image_name: ${{ env.IMAGE_NAME }}
        image_tag: latest, ${{ steps.tags.outputs.VERSION }}
        dockerfile: './Dockerfile'
        context: './'

    - run: mkdir -p ${{ github.workspace }}/artifact
    - name: Create version artifact
      run: echo ${{ steps.tags.outputs.VERSION }} > ${{ github.workspace }}/artifact/version.txt

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
          name: env.IMAGE_NAME
          path:  ${{ github.workspace }}/artifact/version.txt
